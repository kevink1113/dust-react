{"version":3,"sources":["Dust.js","App.js","reportWebVitals.js","index.js"],"names":["Grade","grade","console","log","style","color","Dust","date","pm10val","pm10gr","pm25val","pm25gr","o3val","o3gr","coval","cogr","no2val","no2gr","className","App","state","isLoading","data","process","REACT_APP_GOOGLE_API_KEY","url","axios","get","then","response","list","setState","this","getDust","dataTime","pm10Value","pm10Grade","pm25Value","pm25Grade","o3Value","o3Grade","coValue","coGrade","no2Value","no2Grade","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAGA,SAASA,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAEb,OADAC,QAAQC,IAAI,CAAEF,UACNA,GACJ,IAAK,IACD,OAAO,mBAAGG,MAAO,CAAEC,MAAO,QAAnB,2BAEX,IAAK,IACD,OAAO,mBAAGD,MAAO,CAAEC,MAAO,SAAnB,0BAEX,IAAK,IACD,OAAO,mBAAGD,MAAO,CAAEC,MAAO,UAAnB,2BAEX,IAAK,IACD,OAAO,mBAAGD,MAAO,CAAEC,MAAO,OAAnB,0CA4DJC,MAvDf,YAYI,IAXAC,EAWD,EAXCA,KACAC,EAUD,EAVCA,QACAC,EASD,EATCA,OACAC,EAQD,EARCA,QACAC,EAOD,EAPCA,OACAC,EAMD,EANCA,MACAC,EAKD,EALCA,KACAC,EAID,EAJCA,MACAC,EAGD,EAHCA,KACAC,EAED,EAFCA,OACAC,EACD,EADCA,MAGA,OACI,sBAAKC,UAAU,OAAf,UACI,yGACA,sBAAKA,UAAU,OAAf,wCAA8BX,KAC9B,oBAAGW,UAAU,KAAb,oBACW,4BAAIV,IADf,gBAEI,uBAFJ,UAGW,cAACR,EAAD,CAAOC,MAAOQ,OAEzB,oBAAGS,UAAU,KAAb,oBACW,4BAAIR,IADf,gBAEI,uBAFJ,UAGW,cAACV,EAAD,CAAOC,MAAOU,OAEzB,sBAAKO,UAAU,OAAf,UACI,6CAEI,uBACCN,EAHL,MAII,uBACA,cAACZ,EAAD,CAAOC,MAAOY,OAElB,+DAEI,uBACCC,EAHL,MAII,uBACA,cAACd,EAAD,CAAOC,MAAOc,OAElB,+DAEI,uBACCC,EAHL,MAII,uBACA,cAAChB,EAAD,CAAOC,MAAOgB,c,iBCRnBE,E,4MAvDXC,MAAQ,CACJC,WAAW,EACXC,KAAM,I,wDAGC,IAAD,OACNpB,QAAQC,IAAIoB,qQAAYC,0BACxB,IACMC,EAAG,4MADOF,qGACP,YAETG,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GACjB,IAAMP,EAAOO,EAASP,KAAKQ,KAAK,GAChC5B,QAAQC,IAAImB,GAEZ,EAAKS,SAAS,CACVV,WAAW,EACXC,KAAMA,S,0CAKdU,KAAKC,Y,+BAGC,IAAD,EACuBD,KAAKZ,MAAzBC,EADH,EACGA,UAAWC,EADd,EACcA,KAEnB,OACI,yBAASJ,UAAU,YAAnB,SACKG,EACG,qBAAKH,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAGJ,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIX,KAAMe,EAAKY,SACX1B,QAASc,EAAKa,UACd1B,OAAQa,EAAKc,UACb1B,QAASY,EAAKe,UACd1B,OAAQW,EAAKgB,UACb1B,MAAOU,EAAKiB,QACZ1B,KAAMS,EAAKkB,QACX1B,MAAOQ,EAAKmB,QACZ1B,KAAMO,EAAKoB,QACX1B,OAAQM,EAAKqB,SACb1B,MAAOK,EAAKsB,mB,GA/CtBC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7c1c8378.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Dust.css\";\n\nfunction Grade({ grade }) {\n    console.log({ grade });\n    switch (grade) {\n        case \"1\":\n            return <b style={{ color: \"blue\" }}>좋음!</b>;\n            break;\n        case \"2\":\n            return <b style={{ color: \"green\" }}>보통</b>;\n            break;\n        case \"3\":\n            return <b style={{ color: \"yellow\" }}>나쁨!</b>;\n            break;\n        case \"4\":\n            return <b style={{ color: \"red\" }}>매우 나쁨!!</b>;\n            break;\n    }\n}\n\nfunction Dust({\n    date,\n    pm10val,\n    pm10gr,\n    pm25val,\n    pm25gr,\n    o3val,\n    o3gr,\n    coval,\n    cogr,\n    no2val,\n    no2gr,\n}) {\n    // console.log(id);\n    return (\n        <div className=\"Dust\">\n            <h3>송파구의 현재 대기질 현황: </h3>\n            <div className=\"date\">측정일시 : {date}</div>\n            <p className=\"10\">\n                PM10 : <b>{pm10val}</b>μg/m³\n                <br />\n                grade: <Grade grade={pm10gr} />\n            </p>\n            <p className=\"25\">\n                PM25 : <b>{pm25val}</b>μg/m³\n                <br />\n                grade: <Grade grade={pm25gr} />\n            </p>\n            <div className=\"flex\">\n                <p>\n                    오존\n                    <br />\n                    {o3val}ppm\n                    <br />\n                    <Grade grade={o3gr} />\n                </p>\n                <p>\n                    일산화탄소\n                    <br />\n                    {coval}ppm\n                    <br />\n                    <Grade grade={cogr} />\n                </p>\n                <p>\n                    이산화질소\n                    <br />\n                    {no2val}ppm\n                    <br />\n                    <Grade grade={no2gr} />\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default Dust;\n","import React from \"react\";\nimport \"./App.css\";\nimport Dust from \"./Dust\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        data: {},\n    };\n\n    getDust() {\n        console.log(process.env.REACT_APP_GOOGLE_API_KEY);\n        const API_KEY = process.env.REACT_APP_API_KEY;\n        const url = `//openapi.airkorea.or.kr/openapi/services/rest/ArpltnInforInqireSvc/getMsrstnAcctoRltmMesureDnsty?stationName=송파구&dataTerm=month&pageNo=1&numOfRows=10&_returnType=json&ServiceKey=${API_KEY}&ver=1.3`;\n        // console.log(url);\n        axios.get(url).then((response) => {\n            const data = response.data.list[0];\n            console.log(data);\n\n            this.setState({\n                isLoading: false,\n                data: data,\n            });\n        });\n    }\n    componentDidMount() {\n        this.getDust();\n    }\n\n    render() {\n        const { isLoading, data } = this.state;\n\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader_text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"dustInfo\">\n                        <Dust\n                            date={data.dataTime}\n                            pm10val={data.pm10Value}\n                            pm10gr={data.pm10Grade}\n                            pm25val={data.pm25Value}\n                            pm25gr={data.pm25Grade}\n                            o3val={data.o3Value}\n                            o3gr={data.o3Grade}\n                            coval={data.coValue}\n                            cogr={data.coGrade}\n                            no2val={data.no2Value}\n                            no2gr={data.no2Grade}\n                        />\n                    </div>\n                )}\n            </section>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}